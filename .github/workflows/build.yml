name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Extract repo name
        run: echo "PROJECT_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile capture.py

      - name: Rename output (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: mv dist/capture.exe dist/${{ env.PROJECT_NAME }}-windows.exe

      - name: Rename output (macOS)
        if: matrix.os == 'macos-latest'
        run: mv dist/capture dist/${{ env.PROJECT_NAME }}-macos

      - name: Rename output (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: mv dist/capture dist/${{ env.PROJECT_NAME }}-linux

      - name: Archive build result
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.os }}
          path: |
            ${{ github.workspace }}/dist/${{ env.PROJECT_NAME }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List files
        run: ls -R dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
